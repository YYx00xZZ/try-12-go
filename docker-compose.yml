services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  mongo:
    image: mongo:7.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongo_data:/data/db
    ports:
      - "${MONGO_PORT:-27017}:27017"
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ ping: 1 })'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DB_HOST: db
      DATABASE_URL: ""
      DB_BACKEND: postgres
    command: ["migrate"]
    restart: "no"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      migrate:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      mongo:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DB_HOST: db
      DATABASE_URL: ""
      MONGO_URI: mongodb://mongo:27017
    ports:
      - "${PORT:-8080}:8080"
    restart: unless-stopped

volumes:
  postgres_data:
  mongo_data:
